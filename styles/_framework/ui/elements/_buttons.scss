//
// Buttons
// --------------------------------------------------

// Base styles
// --------------------------------------------------

.btn {
	display: inline-block;
	margin-bottom: 0; // For input.btn
	font-weight: $btn-font-weight;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
	border: 1px solid transparent;
	white-space: nowrap;
	@include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $border-radius-base);
	@include user-select(none);

	&,
	&:active,
	&.active {
		&:focus {
			@include tab-focus();
		}
	}

	&:hover,
	&:focus {
		color: $btn-default-color;
		text-decoration: none;
	}

	&:active,
	&.active {
		outline: 0;
		background-image: none;
		@include box-shadow(inset 0 3px 5px rgba(0, 0, 0, .125));
	}

	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		cursor: not-allowed;
		pointer-events: none; // Future-proof disabling of clicks
		@include opacity(.65);
		@include box-shadow(none);
	}
}

// Alternate buttons
// --------------------------------------------------

.btn-default {
	@include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
}

.btn-primary {
	@include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}

// Success appears as green
.btn-success {
	@include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
}

// Info appears as blue-green
.btn-info {
	@include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
}

// Warning appears as orange
.btn-warning {
	@include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
}

// Danger and error appear as red
.btn-danger {
	@include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link,
.Button--link {
	color: $link-color;
	font-weight: normal;
	cursor: pointer;
	border-radius: 0;

	&,
	&:active,
	&[disabled],
	fieldset[disabled] & {
		background-color: transparent;
		@include box-shadow(none);
	}
	&,
	&:hover,
	&:focus,
	&:active {
		border-color: transparent;
	}
	&:hover,
	&:focus {
		color: $link-hover-color;
		text-decoration: underline;
		background-color: transparent;
	}
	&[disabled],
	fieldset[disabled] & {
		&:hover,
		&:focus {
			color: $btn-link-disabled-color;
			text-decoration: none;
		}
	}
}

// Button Sizes
// --------------------------------------------------

.btn-lg {
	// line-height: ensure even-numbered height of button next to large input
	@include button-size($padding-large-vertical, $padding-large-horizontal, $mod-font-size-2, $line-height-large, $border-radius-large);
}

.btn-sm {
	// line-height: ensure proper height of button next to small input
	@include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $border-radius-small);
}

.btn-xs {
	@include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $border-radius-small);
}

// Block button
// --------------------------------------------------

.btn-block {
	display: block;
	width: 100%;
	padding-left: 0;
	padding-right: 0;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
	margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
	&.btn-block {
		width: 100%;
	}
}

////////////////////////////////////////////////////////

//                 Added Button Styles

///////////////////////////////////////////////////////

button {
	position: relative;
	input[type="submit"] {
		@include reset-btn;
	}
}

.btn {
	@include transition(all, .2s, ease-in-out);
	padding-left: 20px;
	padding-right: 20px;
	white-space: normal;
}

.btn-default {
	background: transparent;
	border: 1px solid transparent;
	&:hover {
		background: transparent;
		border: 1px solid transparent;
	}
	&:active {

	}
}

.btn-info {
	color: $brand-primary;
	background-color: transparent;
	border-width: 2px;
	border-color: $brand-primary;
	transition: all 100ms ease-in;
	&:hover {
		background: $brand-primary;
		border: 4px solid transparent;
		border-bottom: 4px solid $brand-primary-dark;
		margin-top: -2px;
		margin-bottom: 2px;
		color: #fff;
	}
	&:active {

	}
}

.btn-primary {
	color: #fff;
	@include gradient(lighten($brand-primary, 5%), $brand-primary);
	border: 1px solid darken($brand-primary, 10%);
	border-top-color: $brand-primary;
	border-left-color: $brand-primary;
	&:hover {
		@include gradient($brand-primary, darken($brand-primary, 10%));
		border: 1px solid $brand-primary-dark;
	}
}

.btn-warning {
	@include gradient(#ff9017, #ff5d00);
	border: 1px solid #dc5000;
	border-top-color: #ff9e34;
	border-left-color: #ff9e34;
	font-size: $mod-font-size-base;
	padding: 5px $standard-component-height 10px $standard-component-height;
	color: #fff;
	text-shadow: 0px -1px 1px rgba(0, 0, 0, 0.25);

	* {
		color: #fff !important;
	}

	span {
		color: #fff;
		margin: 0;
		text-shadow: 0px -1px 1px rgba(0, 0, 0, 0.3);
	}

	&.btn-lg {
		font-size: $mod-font-size-2;
	}

	&:hover {
		@include gradient($brand-warning, $brand-danger);
	}

	&:active {
		background: $brand-danger;
		box-shadow: inset 0px 1px 1px rgba(#000, .8), 0px 1px 0px rgba(#fff, .25);
	}

    .h5 {
        font-size: $mod-font-size--1 !important;
    }
}

.btn-success {
	@include gradient(#90d257, $brand-success);
	border-left-color: #83c34c;
	border-top-color: #83c34c;
	border-bottom-color: #63a729;
	border-right-color: #63a729;
	&:hover {
		@include gradient(#90d257, #76b63e);
	}
}

.btn-display {
	transition: all .15s ease-in-out;
	padding: 10px 10px 6px 10px;
	margin: 3px 5px 4px 5px;
	border: none;
	background-color: rgba($brand-info, .15);
	border-radius: 5px;
	box-shadow: inset 0px 1px 1px rgba(#000, .8), 0px 1px 0px rgba(#fff, .65);
	.btn-warning {
		transition: all .35s ease-in-out;
		padding: 5px 15px 10px 15px;
		border-bottom: 1px solid $brand-primary-dark;
		position: relative;
		text-shadow: 0px -1px 1px rgba(0, 0, 0, 0.3);
	}
	span {
		display: block;
		font-size: 50%; // don't override with mod scale, breaks more than it fixes
		font-weight: 100;
	}
	&:hover {
		padding: 13px 15px 10px 15px;
		margin: 0;
		background-color: rgba($brand-info, .15);
		border-radius: 5px;
		box-shadow: inset 0px 1px 1px rgba(#000, .8), 0px 1px 0px rgba(#fff, .5);
		.btn-warning {
			text-shadow: 0px -1px 1px rgba(#000, .6);
		}
	}
	&:active .btn-warning {
		border-bottom: none;
		transition: all .15s ese-in-out;
	}
	h1, h2, h3, h4, h5, h6, p {
		color: #fff;
	}
}

// Refactoring Button above to be more modular need to switch button throughout site
.btn-cta-primary {
	color: #fff;
	padding: 10px 10px 6px 10px;
	margin: 3px 5px 4px 5px;
	border: none;
	background-color: rgba($brand-info, .15);
	border-radius: 5px;
	box-shadow: inset 0px 1px 1px rgba(#000, .8), 0px 1px 0px rgba(#fff, .65);
	transition: all .15s ease-in-out;

	&:hover {
		padding: 13px 15px 10px 15px;
		margin: 0;
		background-color: rgba($brand-info, .15);
		border-radius: 5px;
		box-shadow: inset 0px 1px 1px rgba(#000, .8), 0px 1px 0px rgba(#fff, .5);

		.btn-warning {
			text-shadow: 0px -1px 1px rgba(#000, .6);
		}
	}

	.btn-cta-primary-inner-btn {
		@extend .btn-warning;
		transition: all .35s ease-in-out;
		padding: 5px 15px 10px 15px;
		border-bottom: 1px solid $brand-primary-dark;
		z-index: 10;
		position: relative;
		text-shadow: 0px -1px 1px rgba(0, 0, 0, 0.3);
		margin-top: 0;
	}

	.btn-cta-primary-text-h1 {
		display: block;
		font-size: $mod-font-size-4;
		font-family: $headings-font-family;
		font-weight: $headings-font-weight;
	}

	.btn-cta-primary-text-h2 {
		display: block;
		font-size: $mod-font-size--1;
		font-family: $headings-font-family;
	}
}

.btn-secondary {
	@extend .btn-success;
	text-transform: uppercase;
}
